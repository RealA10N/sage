// Read in the input program, and write it to the output file.
// Read in 4096 bytes at a time, and write them to the output file.

let mut buf = ['\0'] * 4096;
let mut is_done = False;

extern def append(file: &Char, buf: &Char): Bool;
extern def write(file: &Char, buf: &Char): Bool;
extern def info(msg: &Char);
extern def error(msg: &Char);
extern def copy(src: &Char, dest: &Char): Bool;
extern def exists(file: &Char): Bool;

if exists(&"ffi.h") {
    if copy(&"ffi.h", &"out.c") {
        info(&"Copied ffi.h to out.h");
    } else {
        error(&"Failed to copy ffi.h to out.h");
        is_done = True;
    }
} elif !(write(&"out.c", &"")) {
    error(&"Failed to write to out.c");
    is_done = True;
}

while !is_done {
    for let mut i=0; i<4096 && !is_done; i+=1 {
        input(&mut (buf[i]));
        if buf[i] == '\0' {
            is_done = True;
        }
    }
    if append(&"out.c", &buf) {
        info(&"Wrote 4096 bytes to out.c");
    } else {
        error(&"Failed to write 4096 bytes to out.c");
        is_done = True;
    }
}